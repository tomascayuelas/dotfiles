#!/usr/bin/env bash
hc() {
    herbstclient "$@"
}

run_once() {
  pkill $1
  exec $1 &
}

hc emit_hook reload

# remove all existing keybindings
hc keyunbind --all

# execute zshrc
source $HOME/.zshrc

sh $HOME/.screenlayout/work-home-three.sh &
run_once "picom --config $HOME/.config/picom/picom.conf"
run_once "nitrogen --restore"
run_once "dunst -c $HOME/.config/dunst/dunstrc"
run_once "nm-applet"
run_once "blueman-applet"
run_once "pasystray"
run_once "parcellite"
run_once "lxpolkit"

# keybindings
Mod=Mod4                            # Use the super key as the main modifier
Alt=Mod1                            # Use the super key as the main modifier
term="alacritty"                        # Set my preferred terminal
launcher="/usr/bin/rofi -show run" 
windowSwitcher="/usr/bin/rofi -show window"
uuidgen="$HOME/.scripts/uuid-copy.sh"
unixtimestamp="$HOME/.config/rofi/scripts/rofi-unixtimestamp.sh"
screenshotApp="flameshot gui"

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn $term
hc keybind $Mod-d spawn $launcher
hc keybind $Alt-Tab spawn $windowSwitcher
hc keybind $Mod-Shift-u spawn $uuidgen
hc keybind $Mod-Shift-t spawn $unixtimestamp
hc keybind $Mod-Shift-p spawn $screenshotApp

# focusing clients
hc keybind $Mod-j             focus left
hc keybind $Mod-k             focus down
hc keybind $Mod-l             focus up
hc keybind $Mod-semicolon     focus right
                              
# moving clients              
hc keybind $Mod-Shift-j         shift left
hc keybind $Mod-Shift-k         shift down
hc keybind $Mod-Shift-l         shift up
hc keybind $Mod-Shift-semicolon shift right

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-Shift-j         resize left +$resizestep
hc keybind $Mod-Control-Shift-k         resize down +$resizestep
hc keybind $Mod-Control-Shift-l         resize up +$resizestep
hc keybind $Mod-Control-Shift-semicolon resize right +$resizestep

# splitting frames
framesize=0.5
hc keybind $Mod-Control-j         split  left   0.5
hc keybind $Mod-Control-k         split  bottom 0.5
hc keybind $Mod-Control-l         split  top    0.5
hc keybind $Mod-Control-semicolon split  right  0.5
hc keybind $Mod-Control-space     split explode

# ------------------------------------------
# TAGS
# ------------------------------------------
tag_names=("1:www" "2:dev" "3:dev" "4:doc" "5:chat" "6:music")
tag_keys=( {1..6} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        # first check if the tag is locked to some monitor.
        # if so, first focus the monitor
        hc keybind "$Mod-$key" \
            chain , silent substitute M tags."$i".my_monitor \
                        focus_monitor M \
                  , use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# Add a keybinding for locking the current tag to the monitor it is displayed
# on. This is done by saving the current monitor index in the my_monitor
# attribute of the focused tag. If the monitor has a (nonempty) name, use the
# monitor name instead of its index.
herbstclient keybind $Mod-t chain \
    , new_attr string tags.focus.my_monitor \
    , substitute M monitors.focus.index set_attr tags.focus.my_monitor M \
    , try and \
        . compare monitors.focus.name != "" \
        . substitute M monitors.focus.name \
                set_attr tags.focus.my_monitor M

# Add a keybinding for removing the lock
herbstclient keybind $Mod-Shift-t \
    remove_attr tags.focus.my_monitor

# Statically define which tag should be send to which monitor
lock_tag_to_monitor() {
    herbstclient chain \
        , new_attr string tags.by-name."$1".my_monitor \
        , set_attr tags.by-name."$1".my_monitor "$2"
}
# Already lock some of the tags to a monitor, for example:
# lock the second tag to the monitor with index 0
lock_tag_to_monitor 2 0

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#ffffff'
hc set frame_border_normal_color '#222222'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 1
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 1
hc set frame_padding 0
hz set frame_gap 1
hc set focus_follows_mouse 1
hc set window_gap 6

hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 1
hc attr theme.floating.border_width 2
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set smart_window_surroundings 1
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0
hc set focus_crosses_monitor_boundaries 1
hc set swap_monitors_to_get_tag 1

# Move between monitors
hc keybind $Mod+q    cycle_monitor -1
hc keybind $Mod+e    cycle_monitor +1 

# rules
hc unrule -F
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# unlock, just to be sure
hc unlock

hc set tree_style '╾│ ├└╼─┐'

hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
"$panel" &
