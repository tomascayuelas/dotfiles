#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#5A8E3A'

# remove all existing keybindings
hc keyunbind --all


TERMINAL=alacritty

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
Mod=Mod4   # Use the super key as the main modifier
Alt=Mod1   # Use the super key as the main modifier
Left=j
Down=k
Up=l
Right=semicolon

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback
hc keybind $Mod-d spawn rofi -modi run -show run
hc keybind $Alt-Tab spawn rofi -show window

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-$Left  focus left
hc keybind $Mod-$Down  focus down
hc keybind $Mod-$Up    focus up
hc keybind $Mod-$Right focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-$Left  shift left
hc keybind $Mod-Shift-$Down  shift down
hc keybind $Mod-Shift-$Up    shift up
hc keybind $Mod-Shift-$Right shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-$Left    resize left +$resizestep
hc keybind $Mod-Control-$Down    resize down +$resizestep
hc keybind $Mod-Control-$Up      resize up +$resizestep
hc keybind $Mod-Control-$Right   resize right +$resizestep

# tags
tag_names=( {1..4} )
tag_keys=( {1..4} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent


activeColor="#7d3750"
normalColor="#1d1f21"

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color $activeColor
hc set frame_border_normal_color $normalColor
hc set frame_bg_normal_color $normalColor
hc set frame_bg_active_color '#345F0Caa'
hc set frame_border_width 0
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 0

hc attr theme.active.color $activeColor
hc attr theme.normal.color $normalColor
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color $normalColor
hc attr theme.border_width 2
hc attr theme.floating.border_width 6
hc attr theme.floating.outer_width 2
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color $activeColor
hc attr theme.urgent.inner_color orange
hc attr theme.normal.inner_color $normalColor
# copy inner color to outer_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done
hc attr theme.active.outer_width 1
hc attr theme.background_color $normalColor

hc set window_gap 4
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    "$panel" "$monitor" &
done
